

//WIP NOT FINAL
public class Solution {
    public int LengthOfLongestSubstring(string s) {
           Dictionary<char, int> map = new Dictionary<char, int>();
    if (s == null || s.Length == 0) return 0;
    if (s.Length == 1) return 1;
    int rightPointer = 0, leftPointer = rightPointer - 1, answer = 0;
    while (rightPointer != s.Length) {
        int previousOccurrence = map[s[rightPointer]]=rightPointer;
        if (previousOccurrence != null) {
            leftPointer = Math.Max(leftPointer, previousOccurrence);
        }
        answer = Math.Max(answer, rightPointer - leftPointer);
        rightPointer++;
    }
    return answer;
        
    }
}